@using UmbraChallenge.Components.Shared
@using UmbraChallenge.Data.Models
@using UmbraChallenge.Data.Services
@using UmbraChallenge.Data
@using UmbraChallenge.Models

@attribute [Authorize]
@page "/Transations"

@inject IUserDatabaseService userServices;

@code {
    public ApplicationUser? loggedUser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        loggedUser = await userServices.GetCurrentAuthUser();
        if (loggedUser == null)
        {
            // repeats until the user gets logged in.
            base.OnInitializedAsync();
        }
        if (loggedUser != null)
        {
            loggedUser.TransactionsList = await userServices.GetUserTransactions(loggedUser, true);
        }
    }
}

<AuthorizeView>
    <Authorized>

        <div class="container text-center">
            <h2>@context.User.Identity.Name.Split("@")[0] transactions history</h2>

            @if (loggedUser != null)
            {
                @if (loggedUser?.TransactionsList.Count > 0)
                {
                    @foreach (Transaction transaction in loggedUser.TransactionsList)
                    {
                        <div class="row justify-content-center my-2">
                            <TransactionCard transaction=@(transaction) logedUser=@(loggedUser) />
                        </div>
                    }

                }
                else
                {
                    <div class="fw-bold card border-2 shadow-sm" style="max-width: 420px;">
                        <div class="card-body">
                            <p class="card-text">
                                This account has not made any trasferences.
                            </p>
                            <a href="/" class="btn btn-primary">
                                Main page
                            </a>
                        </div>

                    </div>

                }
            }

        </div>
    </Authorized>
</AuthorizeView>
